<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.mapper.ChatMapper">
	<!-- 채팅방 목록 가져오기 -->
	<!-- 본인이 아닌 상대방의 프로필 이미지를 가져옴 -->
	<select id="selectChatroomListAll" parameterType="String" resultType="gd.fintech.lms.vo.ChatroomList">
		SELECT
			c.chatroom_uuid chatroomUuid,
			c.chatroom_person1_id chatroomPerson1Id,
			c.chatroom_person1_name chatroomPerson1Name,
			c.chatroom_person2_id chatroomPerson2Id,
			c.chatroom_person2_name chatroomPerson2Name,
			m.mypage_image_uuid chatroomImage
		FROM
			chatroom_list c
		LEFT JOIN 
			mypage_image m 
		ON
			case 
				when 
					c.chatroom_person1_id = c.chatroom_person2_id then 
					m.account_id = c.chatroom_person1_id
				when
					c.chatroom_person1_id = #{accountId} then
					m.account_id = c.chatroom_person2_id
				ELSE 
					m.account_id = c.chatroom_person1_id
			END 
		WHERE
			chatroom_person1_id = #{accountId} OR
			chatroom_person2_id = #{accountId}
	</select>
	<!-- 이미 채팅방이 존재하는지 -->
	<select id="selectCheckChatroomList" parameterType="gd.fintech.lms.vo.ChatList" resultType="String">
		SELECT
			chatroom_uuid chatroomUuid
		FROM
			chatroom_list
		WHERE
			(
				chatroom_person1_id = #{chatroomPerson1Id} AND
				chatroom_person2_id = #{chatroomPerson2Id}
			) OR
			(
				chatroom_person1_id = #{chatroomPerson2Id} AND
				chatroom_person2_id = #{chatroomPerson1Id}
			)
	</select>
	<!-- 이전 채팅 내용 불러오기 -->
	<select id="selectChatHistory" parameterType="String" resultType="gd.fintech.lms.vo.ChatList">
		SELECT
			chat_no chatNo,
			chatroom_uuid chatroomUuid,
			chat_send_id chatSendId,
			chat_send_name chatSendName,
			chat_receive_id chatReceiveId,
			chat_receive_name chatReceiveName,
			chat_text chatText,
			chat_senddate chatSenddate
		FROM
			chat_list
		WHERE
			chatroom_uuid = #{chatroomUuid}
		ORDER BY
			chat_no ASC
	</select>
	<!-- 새로운 채팅방 생성 -->
	<insert id="insertChatroomList" parameterType="gd.fintech.lms.vo.ChatroomList">
		INSERT INTO chatroom_list (
			chatroom_uuid,
			chatroom_person1_id,
			chatroom_person1_name,
			chatroom_person2_id,
			chatroom_person2_name	
		) VALUES (
			#{chatroomUuid},
			#{chatroomPerson1Id},
			#{chatroomPerson1Name},
			#{chatroomPerson2Id},
			#{chatroomPerson2Name}
		)
	</insert>
	
	<!-- 채팅방 정보 가져오기 -->
	<select id="selectChatroomList" parameterType="java.util.Map" resultType="gd.fintech.lms.vo.ChatroomList">
		SELECT
			c.chatroom_uuid chatroomUuid,
			c.chatroom_person1_id chatroomPerson1Id,
			c.chatroom_person1_name chatroomPerson1Name,
			c.chatroom_person2_id chatroomPerson2Id,
			c.chatroom_person2_name chatroomPerson2Name,
			m.mypage_image_uuid chatroomImage
		FROM
			chatroom_list c
		LEFT JOIN 
			mypage_image m 
		ON
			case 
				when 
					c.chatroom_person1_id = c.chatroom_person2_id then 
					m.account_id = c.chatroom_person1_id
				when
					c.chatroom_person1_id = #{accountId} then
					m.account_id = c.chatroom_person2_id
				ELSE 
					m.account_id = c.chatroom_person1_id
			END 
		WHERE
			chatroom_uuid = #{chatroomUuid}		
	</select>
</mapper>