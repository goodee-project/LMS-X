<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.TeacherLectureStudentMapper">
	<resultMap type="gd.fintech.lms.vo.LectureAndStudentAndClassRegistration" id="selectTeacherStudentListResult">
		<!-- 학생 -->
		<collection property="student" ofType="gd.fintech.lms.vo.Student">
			<result property="studentId" column="student_id" />
			<result property="studentName" column="student_name" />
			<result property="studentGender" column="student_gender" />
			<result property="studentPhone" column="student_phone" />
			<result property="studentAddressMain" column="student_address_main" />
		</collection>
		<!-- 강좌 수강 -->
		<collection property="classRegistration" ofType="gd.fintech.lms.vo.ClassRegistration">
			<result property="accountId" column="account_id" />
			<result property="lectureNo" column="lecture_no" />
		</collection>
		
		<!-- 강좌 -->
		<collection property="lecture" ofType="gd.fintech.lms.vo.Lecture">
			<result property="lectureNo" column="lecture_no" />
		</collection>
		
		<!-- 강사 -->
		<collection property="teacher" ofType="gd.fintech.lms.vo.Teacher">
			<result property="teacherName" column="teacher_name" />
		</collection>
	</resultMap>
	
	<!-- 강의를 듣는 학생 목록을 출력 -->
	<select id="selectTeacherLectureStudentListByPage" parameterType="java.util.Map" resultMap="selectTeacherStudentListResult">
		SELECT
			l.lecture_no,
			cr.account_id,
			s.student_id,
			s.student_name,
			s.student_gender,
			s.student_phone,
			s.student_address_main
		FROM
			lecture l
		LEFT OUTER JOIN class_registration cr
			ON l.lecture_no = cr.lecture_no
		LEFT OUTER JOIN student s
			ON s.student_id = cr.account_id
		WHERE
			(cr.class_registration_state = "수강중" OR
			cr.class_registration_state = "수료") AND
			cr.lecture_no = #{lectureNo}
		ORDER BY
		 	s.student_id DESC
		 LIMIT
		 	#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 강의를 듣는 학생 수 -->
	<select id="selectTeacherLectureStudentCount" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			lecture l
		LEFT OUTER JOIN class_registration cr
			ON l.lecture_no = cr.lecture_no
		LEFT OUTER JOIN student s
			ON s.student_id = cr.account_id
		LEFT OUTER JOIN teacher t
			ON t.teacher_name = l.teacher_name
		WHERE
			(cr.class_registration_state = "수강중" OR
			cr.class_registration_state = "수료") AND
			l.lecture_no = #{lectureNo}
	</select>
	
	<resultMap type="gd.fintech.lms.vo.LectureAndStudentAndClassRegistration" id="selectTeacherStudentOneResult">
		<!-- 학생 -->
		<collection property="student" ofType="gd.fintech.lms.vo.Student">
			<result property="studentId" column="student_id" />
			<result property="studentName" column="student_name" />
			<result property="studentEmail" column="student_email" />
			<result property="studentGender" column="student_gender" />
			<result property="studentPhone" column="student_phone" />
			<result property="studentBirth" column="student_birth" />
			<result property="studentAddressMain" column="student_address_main" />
			<result property="studentAddressSub" column="student_address_sub" />
		</collection>
		<!-- 강좌 수강 -->
		<collection property="classRegistration" ofType="gd.fintech.lms.vo.ClassRegistration">
			<result property="accountId" column="account_id" />
			<result property="lectureNo" column="lecture_no" />
		</collection>
		
		<!-- 강좌 -->
		<collection property="lecture" ofType="gd.fintech.lms.vo.Lecture">
			<result property="lectureNo" column="lecture_no" />
		</collection>
		
		<!-- 강사 -->
		<collection property="teacher" ofType="gd.fintech.lms.vo.Teacher">
			<result property="teacherName" column="teacher_name" />
		</collection>
	</resultMap>
	
	<!-- 강의를 듣는 학생의 상세정보 -->
	<select id="selectTeacherLectureStudentOne" parameterType="java.util.Map" resultMap="selectTeacherStudentOneResult">
		SELECT
			l.lecture_no,
			cr.account_id,
			s.student_name,
			s.student_email,
			s.student_gender,
			s.student_phone,
			s.student_birth,
			s.student_address_main,
			s.student_address_sub
		FROM
			lecture l
		LEFT OUTER JOIN class_registration cr
			ON l.lecture_no = cr.lecture_no
		LEFT OUTER JOIN student s
			ON s.student_id = cr.account_id
		LEFT OUTER JOIN teacher t
			ON t.teacher_name = l.teacher_name
		WHERE 
			cr.lecture_no = #{lectureNo} AND 
			t.teacher_name = #{teacherName} AND 
			cr.account_id = #{accountId}
	</select>
	
	<!-- 강의를 듣는 학생 이미지  -->
	<select id="selectTeacherLecureStudentOneImage" parameterType="String" resultType="String">
		SELECT
			mypage_image_uuid
		FROM
			mypage_image
		WHERE
			account_id = #{accountId}
	</select>
	
	<!-- 강의를 듣는 학생 자격증 -->
	<select id="selectTeacherLecureStudentOneLicese" parameterType="String" resultType="gd.fintech.lms.vo.License">
		SELECT
			license_number licenseNumber,
			license_name licenseName,
			license_agency licenseAgency,
			license_getdate licenseGetdate
		FROM
			license
		WHERE
			account_id = #{accountId}
	</select>
	<resultMap type="gd.fintech.lms.vo.Attendance" id="selectTeacherAttendanceStudentResult">
		<result property="accountId" column="account_id" />
		<result property="attendanceState" column="attendance_state" />
		<result property="attendanceRemark" column="attendance_remark" />
		<result property="attendanceDay" column="attendance_day" />
		
		<collection property="student" ofType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name" />
			<result property="studentGender" column="student_gender" />
		</collection>
	</resultMap>
	
	<!-- 학생의 출석 현황 (월별) -->
	<select id="selectTeacherAttendanceByStudentAndMonth" parameterType="java.util.Map" resultMap="selectTeacherAttendanceStudentResult">
		SELECT
			cr.account_id, 
		 	s.student_name, 
			s.student_gender, 
			a.attendance_state, 
			a.attendance_remark,
			a.attendance_day
		FROM
			class_registration cr
		LEFT OUTER JOIN
			student s ON
			cr.account_id = s.student_id
		LEFT OUTER JOIN
			attendance a ON
			cr.account_id = a.account_id AND
			YEAR(a.attendance_day) = #{currentYear} AND
			MONTH(a.attendance_day) = #{currentMonth} 
		WHERE
			(cr.class_registration_state = "수강중" OR
			cr.class_registration_state = "수료") AND
			cr.lecture_no = #{lectureNo} AND
			cr.account_id = #{accountId}
	</select>
</mapper>

