<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gd.fintech.lms.teacher.mapper.TeacherTestMapper">
	<resultMap type="gd.fintech.lms.vo.Answersheet" id="selectAnswersheetListResult">
		<result property="accountId" column="account_id" />
		<result property="answerScore" column="sum_answer_score" />
		<collection property="student" ofType="gd.fintech.lms.vo.Student">
			<result property="studentName" column="student_name" />
			<result property="studentGender" column="student_gender" />
		</collection>
	</resultMap>
	
	<resultMap type="gd.fintech.lms.vo.Multiplechoice" id="selectMultiplechoiceOneResult">
		<result property="multiplechoiceNo" column="multiplechoice_no" />
		<result property="lectureNo" column="lecture_no" />
		<result property="multiplechoiceId" column="multiplechoice_id" />
		<result property="multiplechoiceQuestion" column="multiplechoice_question" />
		<result property="multiplechoiceAnswer" column="multiplechoice_answer" />
		<result property="multiplechoiceScore" column="multiplechoice_score" />
		<collection property="multiplechoiceExampleList" ofType="gd.fintech.lms.vo.MultiplechoiceExample">
			<result property="multiplechoiceExampleNo" column="multiplechoice_example_no" />
			<result property="multiplechoiceExampleId" column="multiplechoice_example_id" />
			<result property="multiplechoiceExampleContent" column="multiplechoice_example_content" />
		</collection>
	</resultMap>
	
	<!-- 시험 정보 조회 -->
	<select id="selectTestOne" parameterType="Integer" resultType="gd.fintech.lms.vo.Test">
		SELECT
			test_startdate testStartdate, 
			test_enddate testEnddate, 
			test_content testContent, 
			test_createdate testCreatedate, 
			test_updatedate testUpdatedate
		FROM
			test
		WHERE
			lecture_no = #{lectureNo}
	</select>
	
	<!-- 시험 정보 입력 -->
	<insert id="insertTest" parameterType="gd.fintech.lms.vo.Test">
		INSERT INTO test (
			lecture_no, 
			test_startdate, 
			test_enddate, 
			test_content, 
			test_createdate, 
			test_updatedate
		) VALUES (
			#{lectureNo}, 
			#{testStartdate}, 
			#{testEnddate}, 
			#{testContent}, 
			NOW(), 
			NOW()
		)
	</insert>
	
	<!-- 시험 정보 수정 -->
	<update id="updateTest" parameterType="gd.fintech.lms.vo.Test">
		UPDATE
			test
		SET
			test_startdate = #{testStartdate}, 
			test_enddate = #{testEnddate}, 
			test_content = #{testContent}, 
			test_updatedate = NOW()
		WHERE
			lecture_no = #{lectureNo}
	</update>
	
	<!-- 평가 답안지 학생 목록 -->
	<select id="selectAnswersheetList" parameterType="Integer" resultMap="selectAnswersheetListResult">
		SELECT
			cr.account_id, 
			s.student_name, 
			s.student_gender, 
			SUM(ans.answer_score) sum_answer_score
		FROM
			class_registration cr
		LEFT OUTER JOIN
			student s ON
			cr.account_id = s.student_id
		LEFT OUTER JOIN
			answersheet ans ON
			cr.account_id = ans.account_id AND
			cr.lecture_no = ans.lecture_no
		WHERE
			(cr.class_registration_state = "수강중" OR
			cr.class_registration_state = "수료") AND
			cr.lecture_no = #{lectureNo}
		GROUP BY
			cr.account_id
		ORDER BY
			s.student_name
	</select>
	
	<!-- 객관식 문제 목록 -->
	<select id="selectMultiplechoiceList" parameterType="java.util.Map" resultType="gd.fintech.lms.vo.Multiplechoice">
		SELECT
			multiplechoice_no multiplechoiceNo, 
			multiplechoice_id multiplechoiceId, 
			multiplechoice_question multiplechoiceQuestion, 
			multiplechoice_answer multiplechoiceAnswer, 
			multiplechoice_score multiplechoiceScore
		FROM
			multiplechoice
		WHERE
			lecture_no = #{lectureNo}
		ORDER BY
			multiplechoice_id
		LIMIT
			#{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 객관식 문제 목록 카운트 -->
	<select id="selectMultiplechoiceListCount" parameterType="Integer" resultType="Integer">
		SELECT
  			COUNT(*)
  		FROM
  			multiplechoice
  		WHERE
  			lecture_no = #{lectureNo};
	</select>
	
	<!-- 평가 학생 답안지 조회 -->
	<select id="selectMultiplechoiceOne" parameterType="Integer" resultMap="selectMultiplechoiceOneResult">
		SELECT
			mc.multiplechoice_no, 
			mc.lecture_no, 
			mc.multiplechoice_id, 
			mc.multiplechoice_question, 
			mc.multiplechoice_answer, 
			mc.multiplechoice_score, 
			mce.multiplechoice_example_no, 
			mce.multiplechoice_example_id, 
			mce.multiplechoice_example_content
		FROM
			multiplechoice mc
		LEFT OUTER JOIN
			multiplechoice_example mce ON
			mc.multiplechoice_no = mce.multiplechoice_no
		WHERE
			mc.lecture_no = #{lectureNo}
		ORDER BY
			mc.multiplechoice_id
	</select>
	<!-- 객관식 문제 보기 조회 -->
	<select id="selectMultiplechoiceExampleList" parameterType="Integer" resultMap="selectMultiplechoiceOneResult">
		SELECT
			mc.multiplechoice_no, 
			mc.lecture_no, 
			mc.multiplechoice_id, 
			mc.multiplechoice_question, 
			mc.multiplechoice_answer, 
			mc.multiplechoice_score, 
			mce.multiplechoice_example_no, 
			mce.multiplechoice_example_id, 
			mce.multiplechoice_example_content
		FROM
			multiplechoice mc
		LEFT OUTER JOIN
			multiplechoice_example mce ON
			mc.multiplechoice_no = mce.multiplechoice_no
		WHERE 
			mc.multiplechoice_no = #{multiplechoiceExampleNo}
	</select>
	
	<!-- 객관식 문제 보기 수정 -->
	<update id="updateMultiplechoiceExample" parameterType="gd.fintech.lms.vo.MultiplechoiceExample">
		UPDATE
			multiplechoice_example
		SET
			multiplechoice_example_content = #{multiplechoiceExampleContent}
		WHERE
			multiplechoice_example_id = #{multiplechoiceExampleId} AND
			multiplechoice_no = #{multiplechoiceNo}	
	</update>
</mapper>